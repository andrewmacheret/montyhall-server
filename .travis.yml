sudo: required

language: java

jdk:
  - openjdk8
  - oraclejdk8

addons:
  ssh_known_hosts: servers.andrewmacheret.com

env:
  global:
    # DOCKER_USERNAME and DOCKER_PASSWORD
    - secure: "XSDDsr6UPAplSIOFuqGCJMVILpVMM180Mbcj2G0SIQy8nU25RzZsyhIsDwRnCVtGtfsCPyPe4XN7gbOMS2NnWO79ehpEqLOZw68G5f0MHnRhYMtBXAToMs1cLipVgNlFriBNYVE0pG9L7q/8hwpUf7hqBERocIJSHSndZ2hYJ4pIoZRYDcr8wxnCJZLdEamQVlgNCPtfZuUdt92ZRUCd7MJ7p6yXWI2y0bn8GnG80u8VnWAvHrgOGIzJ8fpT5eijw3n0t9Ub+SpBby7nlUWnM3xef/mGqwAcp989ClBfsqKlNdHvYBBkVlx/8vFt0W9kacEYQ5oZPfACQdSGMDLaqBwbx2QW3s3LrybXz4WCljZ4LrZtQlFx4+zw/BaBZN7GpSKQ6++Qpg6AOvc+rk+gK5IkUbe5SLX72dfdqZi+dxwYnNlTByfz2owdVoiFvLZxBzy9v/KJFOqsieuJvlyb9/QuXVOGA0A30nzwMPval3T3TLy1bbUcDs3Sk4m0JziHKHztShLE4rDzoOpg+52XvB281IDaifzWQ2ZqnQBrm5Ixu+9lySwUbKWGSJHNmxQqCmAinUNIv6U16BPAEEOHbkUnErupROYmeblZeV3GLBmk9pT3TysNuocK07E8LbBpz+bK+6M6+nmn1OeJCA5YEnzJOGL/N83mH+3PZ5pfigg="
    - secure: "mqTR9s6XQ5kE3bRrLKstCzfpfw/YI8fM7eXwIboahizXJkoJdqNnrDvEhUC3jPOobB8zjmRw+787O/r/cO+CeyfskuctiBFksOSXwwUNyU9hehLOeVaG7sy4MxLTGqb16JUCumZkcImYCIQN5djknmKUqmA9j5WWxsqob5NgppL7cucXQTMc0dEfCvkECUBFxGI5UNajpbhgj3ZzK//JQ+cZrVuM07h0LK8pv/vgludUO88obc/TAwXCqVzU2vSrjq2c5kJmLtS5+Ji64HMcHH++xGsrtxF6oaDijb02B4X55HfbNKKJUh15WIqG4inllxY9GPR9bzSFPDexDtriy+OSZRnukNungpbOyGFSwB1woUDBWqsIP3q5D6Bw32bT9deQqA9XV0MIUT++bwz6mfEorRLJWUwoqaXX8zqiNyBRVx5pzjmACDIwVBPTdqMwK2d4qMdqrrSagZg12IAjltw8uaWu09Sb2VmI2YliWuO4ASdjEibUUqlKFqQLfvWD2tRZR3kDb3GS5lt469eESp0oLg0ZkXb+SIpZ0gXvlCKgOcJx08Zf7FBrOEXQUy5QZDaE8Sl0spzcsUUAalwnK/FzT8lksYY/tLiOPr1laJK3WvV1rFxTcuSeYrvcgJFGgc5QXixaJlVhMmfLfUKyF5EiN37Jbn51ftxlTVOHMnk="
    - CONTAINER_NAME='montyhall-server'
    - SERVICE_NAME='montyhall'


services:
  - docker

after_success:
  - |+
    # push to docker hub
    set -e

    VERSION="$( printf 'VERSION=${project.version}\n0\n' | mvn org.apache.maven.plugins:maven-help-plugin:2.1.1:evaluate | grep '^VERSION=' | cut -d= -f2 )"
    docker login -u="${DOCKER_USERNAME}" -p="${DOCKER_PASSWORD}"
    mvn clean package docker:build

    docker tag "${DOCKER_USERNAME}/${CONTAINER_NAME}" "${DOCKER_USERNAME}/${CONTAINER_NAME}":"${TRAVIS_JDK_VERSION}"
    docker tag "${DOCKER_USERNAME}/${CONTAINER_NAME}" "${DOCKER_USERNAME}/${CONTAINER_NAME}":"${VERSION}-${TRAVIS_JDK_VERSION}"
    docker push "${DOCKER_USERNAME}/${CONTAINER_NAME}":"${TRAVIS_JDK_VERSION}"
    docker push "${DOCKER_USERNAME}/${CONTAINER_NAME}":"${VERSION}-${TRAVIS_JDK_VERSION}"

    if [[ "${TRAVIS_JDK_VERSION}" == "openjdk8" ]]; then
      docker tag "${DOCKER_USERNAME}/${CONTAINER_NAME}" "${DOCKER_USERNAME}/${CONTAINER_NAME}":"latest"
      docker tag "${DOCKER_USERNAME}/${CONTAINER_NAME}" "${DOCKER_USERNAME}/${CONTAINER_NAME}":"${VERSION}"
      docker push "${DOCKER_USERNAME}/${CONTAINER_NAME}":"latest"
      docker push "${DOCKER_USERNAME}/${CONTAINER_NAME}":"${VERSION}"
    fi

  - |+
    # ssh deploy
    set -e

    if [[ "${TRAVIS_JDK_VERSION}" == "openjdk8" ]]; then
      openssl aes-256-cbc -K $encrypted_54d012b34bb3_key -iv $encrypted_54d012b34bb3_iv -in id_rsa_a1-server.enc -out "${TRAVIS_BUILD_DIR}/id_rsa_a1-server" -d
      eval "$(ssh-agent -s)"
      chmod 600 "${TRAVIS_BUILD_DIR}/id_rsa_a1-server"
      ssh-add "${TRAVIS_BUILD_DIR}/id_rsa_a1-server"
      ssh a1@servers.andrewmacheret.com "cd ~/servers/a1-server && docker-compose pull ${SERVICE_NAME} && docker-compose up -d --force-recreate ${SERVICE_NAME}"
    fi
